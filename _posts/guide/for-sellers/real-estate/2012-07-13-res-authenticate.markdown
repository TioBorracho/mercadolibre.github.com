---
layout: guides
title: Authenticate
categories: 
menu: 
- Listing &amp; Selling
tags: 
---


MELI API works with the <a href="http://en.wikipedia.org/wiki/Oauth" target="_blank">OAuth authentication protocol</a>.

There are certain actions that require you to identify as a MELI user (ie: listing a real estate property). To successfully accomplish this actions, you must get an access token that will allow you to identify your MELI user when interacting with the API, for a determined amount of time (after which you will have to get a new access token).

### Get an access token for your signed up user ### {#accesstokensignedupuser}

If your APP will list properties **only on behalf your signed up user**, then follow these steps to get an access token. However, **if you want your APP to list properties on behalf other MELI's signed up users**, then proceed to the steps in the [Get an access token for other users section](#accesstokenotherusers).

To get an access token for your own MELI user, you must send a POST request to the following URL:

<pre class="terminal">
https://api.mercadolibre.com/oauth/token?grant_type=client_credentials&client_id=YOUR_CLIENT_ID&client_secret=YOUR_SECRET_KEY
</pre>

*YOUR_CLIENT_ID* and *YOUR_SECRET_KEY* can be obtained from the MercadoLibre APP you've created.

In the request headers include:

<pre class="terminal">
accepts: application/json
content-type: application/x-www-form-urlencoded 
</pre>

You will receive a response body in a JSON format with the following layout:
{% highlight javascript %}
{ 
	"access_token":"YOUR_NEW_ACCESS_TOKEN",
	"token_type":"bearer",
	"expires_in":10800,
	"scope":"read write",
	"refresh_token":1
}
{% endhighlight %}


*YOUR_NEW_ACCESS_TOKEN* is now the access token required to interact with the API to list a real estate property. Keep in mind that this token will expire after the "expires_in" amount of seconds. Once expired your access token will no longer be valid and you will have to send a new request to the OAuth API to get a new access token.


### Get an access token for other users ### {#accesstokenotherusers}

If your APP will list properties **on behalf other users**, then follow the following steps to get an access token. However, **if you want your APP to list properties only on behalf your signed up user**, then follow the steps in the previous [Get an access token for your signed up user section](#accesstokensignedupuser).

Users on whose behalf you wish to list properties will have to grant permissions to allow your APP do so. This permission-granting will only be needed once per user. To accomplish this, the user who wants to grant this permission must access the following URL:

<pre class="terminal">
 https://auth.mercadolibre.com.ar/authorization?response_type=code&client_id=YOUR_CLIENT_ID
</pre>

*YOUR_CLIENT_ID* can be obtained from the MercadoLibre APP you've created.

Note: if you are accessing with a user belonging to another country other than Argentina, please change the ".com.ar" to your corresponding country extension.

Once there, the user will have to log in and grant permissions to your APP, as shown on figure 1.

![Grant](/images/new-realestate-8.png){:style="width:700px;"}
*<center>figure 1</center>*

Once the user grants permissions to your APP, it will be automatically redirected to the URL previously set up in the "Callback URL" when creating your APP (you can edit your APPs settings at any time in the same admin used for creating it), and this redirecting will also add a *CODE* to the Callback URL. For instance, if your "Callback URL" was https://www.mydomain.com/mercadolibre.php, then the user will be redirected to:

<pre class="terminal">
 https://www.mydomain.com/mercadolibre.php?code=YOUR_SECRET_CODE
</pre>

*YOUR_SECRET_CODE* will be generated by MercadoLibre for security reasons.

When receiving a request to your "Callback URL", your server must then send a POST request to our OAuth API to the following URL:

<pre class="terminal">
 https://api.mercadolibre.com/oauth/token?grant_type=authorization_code&client_id=YOUR_CLIENT_ID&client_secret=YOUR_SECRET_KEY&code=YOUR_SECRET_CODE&redirect_uri=CALLBACK_URL
</pre>

*YOUR_CLIENT_ID* and *YOUR_SECRET_KEY* can be obtained from the MercadoLibre APP you've created. *YOUR_SECRET_CODE* can be obtained from the params received and for the *CALLBACK_URL* you must send the exact same "Callback URL" set up for your APP.

In the request headers include:

<pre class="terminal">
accepts: application/json
content-type: application/x-www-form-urlencoded
</pre>

You will receive a response body in a JSON format with the following layout:
{% highlight javascript %}
{ 
	"access_token" : "YOUR_NEW_ACCESS_TOKEN",
	"token_type" : "bearer",
	"expires_in" : 10800,
	"refresh_token" : "YOUR_REFRESH_TOKEN",
	"scope" : "write read offline_access"
}
{% endhighlight %}

*YOUR_NEW_ACCESS_TOKEN* is now the access token required to interact with the API to list a real estate property on behalf the user who just granted permissions to your APP. Keep in mind that this token will expire after the "expires_in" amount of seconds. Once expired your access token will no longer be valid and you will have to get a new access token. To obtain from the second access token on, you will need *YOUR_REFRESH_TOKEN* and will have to send a POST request to the following URL:

<pre class="terminal">
 https://api.mercadolibre.com/oauth/token?grant_type=refresh_token&client_id=YOUR_CLIENT_ID&client_secret=YOUR_SECRET_KEY&refresh_token=YOUR_REFRESH_TOKEN
</pre>

This POST will then return a new valid access token and a new refresh token, which you will have to use for getting your next valid access token by sending a POST request to the last mentioned URL.

Finally, you will most likely will want to know to which MELI user this access token belongs to (to store the user ID, access token and refresh token in your DB maybe). To accomplish this you must send a GET request to the following URL:

<pre class="terminal">
 https://api.mercadolibre.com/users/me?access_token=YOUR_NEW_ACCESS_TOKEN
</pre>

You will receive a response body in a JSON format from which you will be able to get all of the user's information.